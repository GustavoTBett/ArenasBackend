spring.application.name=ArenasBackend

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.forward-headers-strategy=framework

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=true
# Fecha a sessão no fim da request para liberar conexões mais cedo
spring.jpa.open-in-view=false

# HikariCP - Otimizado para Supabase Free Tier (limite de 3-5 conexoes)
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.keepalive-time=300000
# Se estiver usando o Pooler (pgbouncer) em modo transaction, desabilite prepared statements no server
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# Server
server.port=8080
# Limite de threads do Tomcat para reduzir concorrencia ao DB (ajuste conforme necessidade)
server.tomcat.threads.max=16
front.url=${FRONT_URL}

jwt.public.key=${PUBLIC_KEY}
jwt.private.key=${PRIVATE_KEY}

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# Actuator - evitar que health 'db' crie conexoes adicionais ao banco
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
management.health.db.enabled=false
